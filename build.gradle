buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            url 'https://geonet.artifactoryonline.com/geonet/public-releases'
        }
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'maven-publish'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    jcenter()
    maven() {
        url "http://dl.bintray.com/serenity/maven/"
    }
}

ext {
    projectDescription = 'Serenity Junit report extended (with tags as properties)'

    serenityCoreVersion = '1.2.2'
    cucumberJVMVersion = '1.2.5'
}

group = 'com.s2o'
version = '0.0.1'


task createNewVersionTag(type: Exec) {
    executable "sh"
    args "-c", "git tag -f -a v$version -m'release tag'"
}

task pushVersionTag(type: Exec, dependsOn: 'createNewVersionTag') {
    executable "sh"
    args "-c", "git push -f origin v$version"
}

task tagNewVersion() {
    dependsOn pushVersionTag
}

test {
    maxParallelForks = Runtime.runtime.availableProcessors()
}


configurations.all {
    resolutionStrategy {
        // fail fast on dependency convergence problems
        failOnVersionConflict()
        force  'commons-collections:commons-collections:3.2.2',
                "xml-apis:xml-apis:1.4.01",
                "commons-codec:commons-codec:1.10"
    }
}

dependencies {
    compile ("net.serenity-bdd:serenity-core:${serenityCoreVersion}")
    compile "junit:junit:4.12"

    testCompile ('ch.qos.logback:logback-classic:1.0.13') {
        exclude module: "slf4j-api"
    }
    testCompile 'org.assertj:assertj-core:1.7.1'
//    testCompile 'org.slf4j:slf4j-log4j12:1.7.21'
    testCompile 'org.codehaus.groovy:groovy-all:2.4.4'
    testCompile("org.spockframework:spock-core:0.7-groovy-2.0") {
        exclude group: "junit"
        exclude module: "groovy-all"
    }
    testCompile("com.github.goldin:spock-extensions:0.1.4") {
        exclude module: "spock-core"
        exclude module: "slf4j-api"
    }
}

jar {
    manifest {
        attributes("Implementation-Title": "Serenity JUnit extended Report Plugin",
                "Implementation-Version": project.version.toString())
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}


tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:-options"
}

task copyDeps(type: Copy) {
    from configurations.runtime + configurations.testCompile
    into project.projectDir.path + "/lib"
}